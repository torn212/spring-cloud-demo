===2019-12-26 14:43:34.644 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:43:34.735 INFO  com.example.demo.EurekaClientApplication Line:651 - No active profile set, falling back to default profiles: default
===2019-12-26 14:43:35.451 WARN  org.springframework.boot.actuate.endpoint.EndpointId Line:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
===2019-12-26 14:43:35.574 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=87477f7d-e905-3805-a772-dd0d1c8e1823
===2019-12-26 14:43:35.667 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:43:35.824 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:92  - Tomcat initialized with port(s): 8089 (http)
===2019-12-26 14:43:35.831 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:43:35.832 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
===2019-12-26 14:43:35.832 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.29]
===2019-12-26 14:43:35.910 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
===2019-12-26 14:43:35.910 INFO  org.springframework.web.context.ContextLoader Line:284 - Root WebApplicationContext: initialization completed in 1163 ms
===2019-12-26 14:43:35.971 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:43:35.972 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:43:35.979 INFO  com.netflix.config.DynamicPropertyFactory Line:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@706eab5d
===2019-12-26 14:43:36.190 INFO  org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar Line:75  - Registered '/actuator/jolokia' to jolokia-actuator-endpoint
===2019-12-26 14:43:36.220 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:43:36.221 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:43:36.405 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:171 - Initializing ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:43:36.781 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:171 - Initializing ExecutorService
===2019-12-26 14:43:36.856 WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger Line:106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
===2019-12-26 14:43:36.878 WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger Line:81  - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
===2019-12-26 14:43:36.886 INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Line:58  - Exposing 18 endpoint(s) beneath base path '/actuator'
===2019-12-26 14:43:36.954 INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory Line:72  - Setting initial instance status as: STARTING
===2019-12-26 14:43:36.980 INFO  com.netflix.discovery.DiscoveryClient Line:365 - Initializing Eureka in region us-east-1
===2019-12-26 14:43:37.024 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:70  - Using JSON encoding codec LegacyJacksonJson
===2019-12-26 14:43:37.024 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:71  - Using JSON decoding codec LegacyJacksonJson
===2019-12-26 14:43:37.122 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:80  - Using XML encoding codec XStreamXml
===2019-12-26 14:43:37.122 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:81  - Using XML decoding codec XStreamXml
===2019-12-26 14:43:37.256 INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver Line:43  - Resolving eureka endpoints via configuration
===2019-12-26 14:43:37.270 INFO  com.netflix.discovery.DiscoveryClient Line:976 - Disable delta property : false
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:977 - Single vip registry refresh property : null
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:978 - Force full registry fetch : false
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:979 - Application is null : false
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:980 - Registered Applications size is zero : true
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:982 - Application version is -1: true
===2019-12-26 14:43:37.271 INFO  com.netflix.discovery.DiscoveryClient Line:1065 - Getting all instance registry info from the eureka server
===2019-12-26 14:43:37.414 INFO  com.netflix.discovery.DiscoveryClient Line:1074 - The response status is 200
===2019-12-26 14:43:37.417 INFO  com.netflix.discovery.DiscoveryClient Line:1288 - Starting heartbeat executor: renew interval is: 30
===2019-12-26 14:43:37.419 INFO  com.netflix.discovery.InstanceInfoReplicator Line:60  - InstanceInfoReplicator onDemand update allowed rate per min is 4
===2019-12-26 14:43:37.422 INFO  com.netflix.discovery.DiscoveryClient Line:465 - Discovery Client initialized at timestamp 1577342617421 with initial instances count: 4
===2019-12-26 14:43:37.424 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:41  - Registering application EUREKA-CLIENT-USER-SERVICE with eureka with status UP
===2019-12-26 14:43:37.424 INFO  com.netflix.discovery.DiscoveryClient Line:1323 - Saw local status change event StatusChangeEvent [timestamp=1577342617424, current=UP, previous=STARTING]
===2019-12-26 14:43:37.425 WARN  com.netflix.discovery.InstanceInfoReplicator Line:110 - Ignoring onDemand update due to rate limiter
===2019-12-26 14:43:37.428 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:43:37.439 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:43:37.456 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:43:37.480 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:204 - Tomcat started on port(s): 8089 (http) with context path ''
===2019-12-26 14:43:37.481 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Line:145 - Updating port to 8089
===2019-12-26 14:43:37.485 INFO  com.example.demo.EurekaClientApplication Line:61  - Started EurekaClientApplication in 3.328 seconds (JVM running for 3.928)
===2019-12-26 14:43:37.845 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
===2019-12-26 14:43:37.845 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
===2019-12-26 14:43:37.850 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 5 ms
===2019-12-26 14:43:37.865 INFO  de.codecentric.boot.admin.client.registration.ApplicationRegistrator Line:84  - Application registered itself as 09615568aa22
===2019-12-26 14:44:16.229 WARN  org.springframework.web.servlet.PageNotFound Line:1251 - No mapping for GET /
===2019-12-26 14:44:16.293 WARN  org.springframework.web.servlet.PageNotFound Line:1251 - No mapping for GET /favicon.ico
===2019-12-26 14:44:34.579 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:65  - Unregistering application EUREKA-CLIENT-USER-SERVICE with eureka with status DOWN
===2019-12-26 14:44:34.579 WARN  com.netflix.discovery.DiscoveryClient Line:1321 - Saw local status change event StatusChangeEvent [timestamp=1577342674579, current=DOWN, previous=UP]
===2019-12-26 14:44:34.580 WARN  com.netflix.discovery.DiscoveryClient Line:1321 - Saw local status change event StatusChangeEvent [timestamp=1577342674580, current=UP, previous=DOWN]
===2019-12-26 14:44:34.580 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:44:34.583 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:208 - Shutting down ExecutorService
===2019-12-26 14:44:34.583 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:208 - Shutting down ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:44:34.587 INFO  com.netflix.discovery.DiscoveryClient Line:906 - Shutting down DiscoveryClient ...
===2019-12-26 14:44:34.589 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:44:34.593 WARN  org.springframework.cloud.health.RefreshScopeHealthIndicator Line:87  - Health check failed
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'refreshScope': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:1920)
	at org.springframework.cloud.health.RefreshScopeHealthIndicator.doHealthCheck(RefreshScopeHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1628)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:195)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:176)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:170)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
===2019-12-26 14:44:34.594 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:44:34.602 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:44:34.603 INFO  com.netflix.discovery.DiscoveryClient Line:940 - Unregistering ...
===2019-12-26 14:44:34.613 INFO  com.netflix.discovery.DiscoveryClient Line:942 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - deregister  status: 200
===2019-12-26 14:44:34.623 INFO  com.netflix.discovery.DiscoveryClient Line:929 - Completed shut down of DiscoveryClient
===2019-12-26 14:50:33.522 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:50:33.605 INFO  com.example.demo.EurekaClientApplication Line:651 - No active profile set, falling back to default profiles: default
===2019-12-26 14:50:34.213 WARN  org.springframework.boot.actuate.endpoint.EndpointId Line:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
===2019-12-26 14:50:34.340 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=87477f7d-e905-3805-a772-dd0d1c8e1823
===2019-12-26 14:50:34.461 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:50:34.658 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:92  - Tomcat initialized with port(s): 8089 (http)
===2019-12-26 14:50:34.668 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:50:34.669 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
===2019-12-26 14:50:34.669 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.29]
===2019-12-26 14:50:34.774 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
===2019-12-26 14:50:34.774 INFO  org.springframework.web.context.ContextLoader Line:284 - Root WebApplicationContext: initialization completed in 1157 ms
===2019-12-26 14:50:34.844 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:50:34.844 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:50:34.852 INFO  com.netflix.config.DynamicPropertyFactory Line:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7c2b58c0
===2019-12-26 14:50:35.075 INFO  org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar Line:75  - Registered '/actuator/jolokia' to jolokia-actuator-endpoint
===2019-12-26 14:50:35.103 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:50:35.103 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:50:35.312 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:171 - Initializing ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:50:35.668 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:171 - Initializing ExecutorService
===2019-12-26 14:50:35.745 WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger Line:106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
===2019-12-26 14:50:35.770 WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger Line:81  - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
===2019-12-26 14:50:35.779 INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Line:58  - Exposing 18 endpoint(s) beneath base path '/actuator'
===2019-12-26 14:50:35.850 INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory Line:72  - Setting initial instance status as: STARTING
===2019-12-26 14:50:35.877 INFO  com.netflix.discovery.DiscoveryClient Line:365 - Initializing Eureka in region us-east-1
===2019-12-26 14:50:35.917 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:70  - Using JSON encoding codec LegacyJacksonJson
===2019-12-26 14:50:35.917 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:71  - Using JSON decoding codec LegacyJacksonJson
===2019-12-26 14:50:36.011 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:80  - Using XML encoding codec XStreamXml
===2019-12-26 14:50:36.011 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:81  - Using XML decoding codec XStreamXml
===2019-12-26 14:50:36.151 INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver Line:43  - Resolving eureka endpoints via configuration
===2019-12-26 14:50:36.165 INFO  com.netflix.discovery.DiscoveryClient Line:976 - Disable delta property : false
===2019-12-26 14:50:36.166 INFO  com.netflix.discovery.DiscoveryClient Line:977 - Single vip registry refresh property : null
===2019-12-26 14:50:36.166 INFO  com.netflix.discovery.DiscoveryClient Line:978 - Force full registry fetch : false
===2019-12-26 14:50:36.166 INFO  com.netflix.discovery.DiscoveryClient Line:979 - Application is null : false
===2019-12-26 14:50:36.166 INFO  com.netflix.discovery.DiscoveryClient Line:980 - Registered Applications size is zero : true
===2019-12-26 14:50:36.166 INFO  com.netflix.discovery.DiscoveryClient Line:982 - Application version is -1: true
===2019-12-26 14:50:36.167 INFO  com.netflix.discovery.DiscoveryClient Line:1065 - Getting all instance registry info from the eureka server
===2019-12-26 14:50:36.305 INFO  com.netflix.discovery.DiscoveryClient Line:1074 - The response status is 200
===2019-12-26 14:50:36.307 INFO  com.netflix.discovery.DiscoveryClient Line:1288 - Starting heartbeat executor: renew interval is: 30
===2019-12-26 14:50:36.309 INFO  com.netflix.discovery.InstanceInfoReplicator Line:60  - InstanceInfoReplicator onDemand update allowed rate per min is 4
===2019-12-26 14:50:36.312 INFO  com.netflix.discovery.DiscoveryClient Line:465 - Discovery Client initialized at timestamp 1577343036312 with initial instances count: 4
===2019-12-26 14:50:36.314 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:41  - Registering application EUREKA-CLIENT-USER-SERVICE with eureka with status UP
===2019-12-26 14:50:36.315 INFO  com.netflix.discovery.DiscoveryClient Line:1323 - Saw local status change event StatusChangeEvent [timestamp=1577343036315, current=UP, previous=STARTING]
===2019-12-26 14:50:36.315 WARN  com.netflix.discovery.InstanceInfoReplicator Line:110 - Ignoring onDemand update due to rate limiter
===2019-12-26 14:50:36.318 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:50:36.330 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:50:36.347 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:50:36.373 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:204 - Tomcat started on port(s): 8089 (http) with context path ''
===2019-12-26 14:50:36.374 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Line:145 - Updating port to 8089
===2019-12-26 14:50:36.378 INFO  com.example.demo.EurekaClientApplication Line:61  - Started EurekaClientApplication in 3.347 seconds (JVM running for 4.087)
===2019-12-26 14:50:36.554 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
===2019-12-26 14:50:36.554 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
===2019-12-26 14:50:36.559 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 5 ms
===2019-12-26 14:50:36.683 INFO  de.codecentric.boot.admin.client.registration.ApplicationRegistrator Line:84  - Application registered itself as 09615568aa22
===2019-12-26 14:50:44.305 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:65  - Unregistering application EUREKA-CLIENT-USER-SERVICE with eureka with status DOWN
===2019-12-26 14:50:44.305 WARN  com.netflix.discovery.DiscoveryClient Line:1321 - Saw local status change event StatusChangeEvent [timestamp=1577343044305, current=DOWN, previous=UP]
===2019-12-26 14:50:44.305 WARN  com.netflix.discovery.InstanceInfoReplicator Line:110 - Ignoring onDemand update due to rate limiter
===2019-12-26 14:50:44.308 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:208 - Shutting down ExecutorService
===2019-12-26 14:50:44.309 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:208 - Shutting down ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:50:44.312 INFO  com.netflix.discovery.DiscoveryClient Line:906 - Shutting down DiscoveryClient ...
===2019-12-26 14:53:23.389 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:53:23.477 INFO  com.example.demo.EurekaClientApplication Line:651 - No active profile set, falling back to default profiles: default
===2019-12-26 14:53:24.261 WARN  org.springframework.boot.actuate.endpoint.EndpointId Line:155 - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
===2019-12-26 14:53:24.375 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=87477f7d-e905-3805-a772-dd0d1c8e1823
===2019-12-26 14:53:24.477 INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Line:330 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
===2019-12-26 14:53:24.655 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:92  - Tomcat initialized with port(s): 8089 (http)
===2019-12-26 14:53:24.670 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:53:24.671 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
===2019-12-26 14:53:24.672 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.29]
===2019-12-26 14:53:24.777 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
===2019-12-26 14:53:24.777 INFO  org.springframework.web.context.ContextLoader Line:284 - Root WebApplicationContext: initialization completed in 1284 ms
===2019-12-26 14:53:24.845 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:53:24.846 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:53:24.854 INFO  com.netflix.config.DynamicPropertyFactory Line:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@43f0c2d1
===2019-12-26 14:53:25.132 INFO  org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar Line:75  - Registered '/actuator/jolokia' to jolokia-actuator-endpoint
===2019-12-26 14:53:25.161 WARN  com.netflix.config.sources.URLConfigurationSource Line:121 - No URLs will be polled as dynamic configuration sources.
===2019-12-26 14:53:25.161 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
===2019-12-26 14:53:25.352 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:171 - Initializing ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:53:25.709 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:171 - Initializing ExecutorService
===2019-12-26 14:53:25.792 WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger Line:106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
===2019-12-26 14:53:25.816 WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger Line:81  - Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
===2019-12-26 14:53:25.824 INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Line:58  - Exposing 18 endpoint(s) beneath base path '/actuator'
===2019-12-26 14:53:25.892 INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory Line:72  - Setting initial instance status as: STARTING
===2019-12-26 14:53:25.920 INFO  com.netflix.discovery.DiscoveryClient Line:365 - Initializing Eureka in region us-east-1
===2019-12-26 14:53:25.960 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:70  - Using JSON encoding codec LegacyJacksonJson
===2019-12-26 14:53:25.960 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:71  - Using JSON decoding codec LegacyJacksonJson
===2019-12-26 14:53:26.054 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:80  - Using XML encoding codec XStreamXml
===2019-12-26 14:53:26.055 INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider Line:81  - Using XML decoding codec XStreamXml
===2019-12-26 14:53:26.194 INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver Line:43  - Resolving eureka endpoints via configuration
===2019-12-26 14:53:26.209 INFO  com.netflix.discovery.DiscoveryClient Line:976 - Disable delta property : false
===2019-12-26 14:53:26.209 INFO  com.netflix.discovery.DiscoveryClient Line:977 - Single vip registry refresh property : null
===2019-12-26 14:53:26.209 INFO  com.netflix.discovery.DiscoveryClient Line:978 - Force full registry fetch : false
===2019-12-26 14:53:26.209 INFO  com.netflix.discovery.DiscoveryClient Line:979 - Application is null : false
===2019-12-26 14:53:26.209 INFO  com.netflix.discovery.DiscoveryClient Line:980 - Registered Applications size is zero : true
===2019-12-26 14:53:26.210 INFO  com.netflix.discovery.DiscoveryClient Line:982 - Application version is -1: true
===2019-12-26 14:53:26.210 INFO  com.netflix.discovery.DiscoveryClient Line:1065 - Getting all instance registry info from the eureka server
===2019-12-26 14:53:26.343 INFO  com.netflix.discovery.DiscoveryClient Line:1074 - The response status is 200
===2019-12-26 14:53:26.346 INFO  com.netflix.discovery.DiscoveryClient Line:1288 - Starting heartbeat executor: renew interval is: 30
===2019-12-26 14:53:26.348 INFO  com.netflix.discovery.InstanceInfoReplicator Line:60  - InstanceInfoReplicator onDemand update allowed rate per min is 4
===2019-12-26 14:53:26.351 INFO  com.netflix.discovery.DiscoveryClient Line:465 - Discovery Client initialized at timestamp 1577343206350 with initial instances count: 5
===2019-12-26 14:53:26.353 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:41  - Registering application EUREKA-CLIENT-USER-SERVICE with eureka with status UP
===2019-12-26 14:53:26.353 INFO  com.netflix.discovery.DiscoveryClient Line:1323 - Saw local status change event StatusChangeEvent [timestamp=1577343206353, current=UP, previous=STARTING]
===2019-12-26 14:53:26.354 WARN  com.netflix.discovery.InstanceInfoReplicator Line:110 - Ignoring onDemand update due to rate limiter
===2019-12-26 14:53:26.356 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:53:26.369 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8089"]
===2019-12-26 14:53:26.384 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:53:26.399 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:204 - Tomcat started on port(s): 8089 (http) with context path ''
===2019-12-26 14:53:26.400 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Line:145 - Updating port to 8089
===2019-12-26 14:53:26.404 INFO  com.example.demo.EurekaClientApplication Line:61  - Started EurekaClientApplication in 3.506 seconds (JVM running for 4.315)
===2019-12-26 14:53:26.489 INFO  de.codecentric.boot.admin.client.registration.ApplicationRegistrator Line:84  - Application registered itself as 09615568aa22
===2019-12-26 14:53:26.764 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
===2019-12-26 14:53:26.764 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
===2019-12-26 14:53:26.768 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 4 ms
===2019-12-26 14:53:54.457 WARN  org.springframework.web.servlet.PageNotFound Line:1251 - No mapping for GET /favicon.ico
===2019-12-26 14:57:53.990 INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry Line:65  - Unregistering application EUREKA-CLIENT-USER-SERVICE with eureka with status DOWN
===2019-12-26 14:57:53.991 WARN  com.netflix.discovery.DiscoveryClient Line:1321 - Saw local status change event StatusChangeEvent [timestamp=1577343473991, current=DOWN, previous=UP]
===2019-12-26 14:57:53.991 WARN  com.netflix.discovery.DiscoveryClient Line:1321 - Saw local status change event StatusChangeEvent [timestamp=1577343473991, current=UP, previous=DOWN]
===2019-12-26 14:57:53.992 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:57:53.995 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Line:208 - Shutting down ExecutorService
===2019-12-26 14:57:53.996 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:208 - Shutting down ExecutorService 'applicationTaskExecutor'
===2019-12-26 14:57:54.003 INFO  com.netflix.discovery.DiscoveryClient Line:906 - Shutting down DiscoveryClient ...
===2019-12-26 14:57:54.003 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:57:54.008 WARN  org.springframework.cloud.health.RefreshScopeHealthIndicator Line:87  - Health check failed
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'refreshScope': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:1920)
	at org.springframework.cloud.health.RefreshScopeHealthIndicator.doHealthCheck(RefreshScopeHealthIndicator.java:49)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1628)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:195)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:176)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:170)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
===2019-12-26 14:57:54.008 INFO  com.netflix.discovery.DiscoveryClient Line:844 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089: registering service...
===2019-12-26 14:57:54.019 INFO  com.netflix.discovery.DiscoveryClient Line:853 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - registration status: 204
===2019-12-26 14:57:54.020 INFO  com.netflix.discovery.DiscoveryClient Line:940 - Unregistering ...
===2019-12-26 14:57:54.028 INFO  com.netflix.discovery.DiscoveryClient Line:942 - DiscoveryClient_EUREKA-CLIENT-USER-SERVICE/192.168.1.17:eureka-client-user-service:8089 - deregister  status: 200
===2019-12-26 14:57:54.038 INFO  com.netflix.discovery.DiscoveryClient Line:929 - Completed shut down of DiscoveryClient
